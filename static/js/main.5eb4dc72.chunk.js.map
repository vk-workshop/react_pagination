{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","numberPageLinks","Math","ceil","pageLinks","prevArrowDisabled","nextArrowDisabled","className","cn","disabled","href","onClick","map","page","active","ITEMS_PER_PAGE","items","App","useState","itemsOnPage","setItemsOnPage","setCurrentPage","visibleItems","startPage","endPage","endPageTernary","id","value","onChange","target","Number","num","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"gMAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAkBC,KAAKC,KAAKN,EAAQC,GACpCM,EAAYd,EAAW,EAAGW,GAc1BI,EAAoC,IAAhBN,EACpBO,EAAoBP,IAAgBE,EAE1C,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAAUJ,IAA3C,SACE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAjBc,WAChBZ,EAAc,GAChBC,EAAaD,EAAc,IAUzB,oBAWDK,EAAUQ,KAAI,SAAAC,GAAI,OACjB,oBAEEN,UAAWC,IAAG,YAAa,CAAEM,OAAQD,IAASd,IAFhD,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAOE,IAASd,EACrB,KACAC,EAAaa,IANnB,SAQGA,KAXEA,MAgBT,oBAAIN,UAAWC,IAAG,YAAa,CAAEC,SAAUH,IAA3C,SACE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QArDc,WAChBZ,EAAcE,GAChBD,EAAaD,EAAc,IA8CzB,wBC7DFgB,EAAiB,CAAC,EAAG,EAAG,GAAI,IAErBC,EAAQ1B,EAAW,EAHlB,IAIXsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPuB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOnB,EAAP,KAAoBsB,EAApB,KAEMC,EAAY,YAAON,GACnBO,GAAaxB,EAAc,GAAKoB,EAChCK,EAAUzB,EAAcoB,EACxBM,EAAiBD,EAbX,MAaqCA,EAEjD,OACE,sBAAKjB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCwB,EAAY,EAD7C,cACoDE,EADpD,eAnBQ,GAmBR,OAIA,sBAAKlB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAOR,EACPS,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBT,EAAeU,OAAOD,EAAOF,SALzD,SAOGZ,EAAeH,KAAI,SAACmB,GAAD,OAClB,wBAAkBJ,MAAOI,EAAzB,SACGA,GADUA,UAOnB,uBAAOC,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MA9CM,GA+CNC,QAASqB,EACTpB,YAAaA,EACbC,aAAc,SAACa,GAAD,OAAUQ,EAAeR,MAEzC,6BACGS,EACEW,MAAMV,EAAWC,GACjBZ,KAAI,SAACsB,GAAD,OACH,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC3DrBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5eb4dc72.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberPageLinks = Math.ceil(total / perPage);\n  const pageLinks = getNumbers(1, numberPageLinks);\n\n  const nextPageArrow = () => {\n    if (currentPage < numberPageLinks) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const prevPageArrow = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const prevArrowDisabled = currentPage === 1;\n  const nextArrowDisabled = currentPage === numberPageLinks;\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: prevArrowDisabled })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={prevArrowDisabled}\n          onClick={prevPageArrow}\n        >\n          «\n        </a>\n      </li>\n\n      {pageLinks.map(page => (\n        <li\n          key={page}\n          className={cn('page-item', { active: page === currentPage })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => (page === currentPage\n              ? null\n              : onPageChange(page))}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', { disabled: nextArrowDisabled })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={nextArrowDisabled}\n          onClick={nextPageArrow}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst TOTAL = 42;\nconst ITEMS_PER_PAGE = [3, 5, 10, 20];\n\nexport const items = getNumbers(1, TOTAL)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsOnPage, setItemsOnPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const visibleItems = [...items];\n  const startPage = (currentPage - 1) * itemsOnPage;\n  const endPage = currentPage * itemsOnPage;\n  const endPageTernary = endPage > TOTAL ? TOTAL : endPage;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startPage + 1} - ${endPageTernary} of ${TOTAL})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsOnPage}\n            onChange={({ target }) => setItemsOnPage(Number(target.value))}\n          >\n            {ITEMS_PER_PAGE.map((num) => (\n              <option key={num} value={num}>\n                {num}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={TOTAL}\n        perPage={itemsOnPage}\n        currentPage={currentPage}\n        onPageChange={(page) => setCurrentPage(page)}\n      />\n      <ul>\n        {visibleItems\n          .slice(startPage, endPage)\n          .map((item) => (\n            <li key={item} data-cy=\"item\">\n              {item}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}